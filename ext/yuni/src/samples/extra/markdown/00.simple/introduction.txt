
Introduction
============

Definition
----------

Yuni is a cross-platform C++ framework for developing high-level, complex and
fast applications. Yuni can be useful in all kinds of applications, from simple
100-line programs to full-blown 3D applications intends to provide a complete
set of coherent API. It intends to be a reliable and simple bridge between
different worlds, allowing to write all sorts of applications, while letting
the developer focus on her real work.

The Yuni project is connected to all these domains :
 - 3D graphics
 - Physics
 - 2D/3D User Interface in 3D context
 - 2D/3D Input devices
 - Sound, playback of 2D/3D sounds
 - Collaborative applications
 - Scripting languages
 - Simulation
 - Artificial Intelligence, mainly on 3D objects
 - Threading / Parallel computing
 - Networking
 - Real-time multi-user Collaboration
 - Any other domain related to multimedia, user interaction, and virtual worlds


Misconceptions
--------------

Yuni is not a 3D engine nor a game engine.  
It offers a 3D engine as part of a wide-range library interested in multimedia
and virtual worlds. Yuni is not a contender for Ogre or Irrlicht. These
projects are high-end game engines working locally with complete data of the
world. Yuni's engine is experimental in that it is meant to work with LDOs
(Live Distributed Objects) that can be on any computer in the network.

Yuni is not simply meant for 3D games or simulations.
It can be useful for all kinds of programs : very simple one-feature
command-line-only programs, many-windowed applications, collaborative 3D
worlds, massively parallel solver, or most anything else.

Yuni is only meant for C++.
C will not do. Yuni is written entirely in C++, and relies heavily on OO
concepts and C++ templates. Also, a large part of Yuni is entirely static,
which means that it will have to be included and compiled as C++.


Target audience
---------------

Yuni is meant to be used by developers who already know C++, like it and want
to use it for writing any kind of application without worrying about the
low-level aspects of the language and the trouble of mixing many kinds of
libraries to do all the usual things any application requires.

Big applications always end up requiring performance at some point,
multi-threading at some other, graphics, sound, input, command line parsing,
etc. Yuni will provide all this and more in a portable way with a single,
easy-to-use, object-oriented API.

Here is a code block :
    for i from 0 to 10 do
        something;
Cool no ? :)


Piko
====
Nyuuuu
------
piko
----
